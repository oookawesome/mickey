---
layout: post
title: 클린 코드 책을 읽고
date: 2018-11-03 17:30:00 +0300
description: 클린 코드 애자일 소프트웨어 장인 정신 책에 대한 정리
image :
    feature: clean-coder.jpg
    topPosition: -50px
categories: clean code
tags: [Clean Code]
bgContrast: dark
bgGradientOpacity: darker
syntaxHighlighter: no
---

### 클린 코드 책을 읽고

#### 프롤로그
사무실 구석에 놓여있던 클린 코드 책이 갑자기 눈에 들어와 가져와 읽기 시작했다. 몇 개월전에 선배가 읽어보라고 추천해줬던 기억이 있는데, 이제서야 읽게 되었다.

#### 2. 의미있는 이름
프로그래머는 매 순간 이름을 짓는다.

##### 의도를 분명히 밝혀라
- 의도가 분명한 이름은 짓는 것은 __정말로__ 중요하다.

##### 그릇된 정보를 피하라
- list가 아닌 것에는 list를 붙이지 마라(타입을 뒤에 붙이지 않는 것을 추천)

##### 의미있게 구분하라
- zork라는 이름을 쓰고 있다고 새 변수를 thezork라고 지으면 안된다.

##### 발음하기 쉬운 이름을 사용하라
- genymdhms 이런 변수는 쓰지마라

##### 검색하기 쉬운 이름을 사용하라
- WORK_DAYS_PER_WEEK와 같은 단어는 찾기 쉽지만, 5같은 숫자는 찾기 어렵다.

##### 인코딩을 피하라

##### 자신의 기억력을 자랑하지 마라
- 루프의 반복변수(i,j) 정도 외에 한글자로 이름짓지 말라
- 명료함이 최고다

##### 클래스이름은 명사구로 지어라

##### 메서드이름은 동사구가 적합하다

##### 기발한 이름은 피하라
- kill()대신 whack()라고 짓지 마라

##### 한 개념에 한 단어를 사용하라
- 똑같은 메서드를 클래스마다 fetch, get, retrieve라고 짓는 일은 하지 말라

##### 말장난을 하지마라
- 전부 add를 쓰고 있다고 다른 동작을 하는 새 메서드에 add라고 붙여선 안된다. 그것을 말장난이다.

##### 해법 영역에서 가져온 이름을 사용하라
- 코드를 읽는 사람도 프로그래머이므로, 전산 용어, 알고리즘 용어 등을 사용해도 괜찮다.

##### 문제 영역에서 가져온 이름을 사용하라

##### 의미있는 맥락을 추가하라
- firstName, state, housdeNumber 같은 변수를 사용한다면, 변수에 Addr 접두어를 붙이거나, Address클래스를 만들어 맥락을 표현하는 것이 좋다.

##### 불필요한 맥락을 없애라
- GSD라는 이름의 애플리케이션을 만든다고, 모든 모듈이나 클래스에 GSD 접두어를 붙이지 마라.
